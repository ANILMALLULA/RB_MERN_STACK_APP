{"version":3,"sources":["redux/actionTypes.js","Services/AuthService.js","redux/actions/userAction.js","components/login/Login.js","components/home/Home.js","components/register/Register.js","components/admin/Admin.js","Services/BlogService.js","components/blog/Blog.js","redux/actions/blogsAction.js","components/blogs/Blogs.js","components/header/Header.js","components/ProtectedRoute.js","App.js","redux/reducers/blogsReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["LOGIN_lOADING","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_LOADING","REGISTER_SUCCESS","REGISTER_FAIL","ISAUTHENTICATED_STATUS","BLOGS_REQUEST_lOADING","BLOGS_REQUEST_SUCCESS","BLOGS_REQUEST_FAIL","BLOG_REQUEST_FAIL","BLOG_DELETE_FAIL","LOGOUT_SUCCESS","AuthService","login","user","console","log","fetch","method","body","JSON","stringify","headers","then","res","status","json","data","isAuthenticated","username","role","message","statusText","register","logout","dispatch","type","payload","Login","useState","setUsername","password","setPassword","useSelector","state","authUser","auth","error","loading","useDispatch","useEffect","to","style","textAlign","margin","color","height","width","className","src","alt","onSubmit","event","preventDefault","length","htmlFor","id","value","onChange","e","target","fontSize","marginTop","Home","display","justifyContent","alignItems","flexDirection","padding","marginBottom","backgroundColor","borderRadius","Register","setRole","errorMsg","seterrorMsg","msgError","msgBody","alert","fontWeight","Admin","BlogService","getBlogs","response","postBlog","blog","deleteBlog","Blog","props","onClick","blogs","catch","deleteBlogItem","Blogs","setblog","blogReducer","resetForm","map","b","_id","postBlogItem","name","placeholder","Header","onClickLogoutHandler","success","ProtectedRoute","App","exact","path","component","initialState","blogsReducer","action","isAdmin","userReducer","combineReducers","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22137b99.chunk.js","sourcesContent":["export const LOGIN_lOADING = \"LOGIN_lOADING\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n\r\nexport const REGISTER_LOADING = \"REGISTER_LOADING\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\n\r\nexport const ADMIN_REQUEST_lOADING = \"ADMIN_REQUEST_lOADING\";\r\nexport const ADMIN_REQUEST_SUCCESS = \"ADMIN_REQUEST_SUCCESS\";\r\nexport const ADMIN_REQUEST_FAIL = \"ADMIN_REQUEST_FAIL\";\r\n\r\nexport const ISAUTHENTICATED_STATUS = \"ISAUTHENTICATED_STATUS\";\r\n\r\nexport const BLOGS_REQUEST_lOADING = \"BLOGS_REQUEST_lOADING\";\r\nexport const BLOGS_REQUEST_SUCCESS = \"BLOGS_REQUEST_SUCCESS\";\r\nexport const BLOGS_REQUEST_FAIL = \"BLOGS_REQUEST_FAIL\";\r\n\r\nexport const BLOG_REQUEST_FAIL = \"BLOG_REQUEST_FAIL\";\r\n\r\nexport const BLOG_DELETE_FAIL = \"BLOG_DELETE_FAIL\";\r\n\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\n","const AuthService =  {\r\n  login: (user) => {\r\n    console.log(user);\r\n    return fetch(\"/user/login\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) return res.json().then((data) => data);\r\n      else\r\n        return {\r\n          isAuthenticated: false,\r\n          user: { username: \"\", role: \"\", message: res.statusText },\r\n        };\r\n    });\r\n  },\r\n  register: (user) => {\r\n    console.log(user);\r\n    return fetch(\"/user/register\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  logout: () => {\r\n    return fetch(\"/user/logout\")\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  isAuthenticated: () => {\r\n    return fetch(\"/user/authenticated\").then((res) => {\r\n      if (res.status !== 401) return res.json().then((data) => data);\r\n      else return { isAuthenticated: false, user: { username: \"\", role: \"\" } };\r\n    });\r\n  },\r\n};\r\n\r\nexport default AuthService","import {\r\n  ISAUTHENTICATED_STATUS,\r\n  LOGIN_FAIL,\r\n  LOGIN_lOADING,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_FAIL,\r\n  REGISTER_LOADING,\r\n  REGISTER_SUCCESS,\r\n} from \"../actionTypes\";\r\n\r\nimport AuthService from \"../../Services/AuthService\";\r\n\r\nexport const login = (user) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_lOADING,\r\n    });\r\n    AuthService.login(user).then((data) => {\r\n      const { isAuthenticated } = data;\r\n      if (isAuthenticated) {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n          payload: data,\r\n        });\r\n      }\r\n    });\r\n\r\n    // fetch(\"/user/login\", {\r\n    //   method: \"POST\",\r\n    //   body: JSON.stringify(user),\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    // })\r\n    //   .then((res) => {\r\n    //     return res.json();\r\n    //   })\r\n    //   .then((jsonData) => {\r\n    //     dispatch({\r\n    //       type: LOGIN_SUCCESS,\r\n    //       payload: jsonData,\r\n    //     });\r\n    //   })\r\n    //   .catch((err) =>\r\n    //     dispatch({\r\n    //       type: LOGIN_FAIL,\r\n    //       payload: err,\r\n    //     })\r\n    //   );\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return (dispatch) => {\r\n    AuthService.logout().then((data) => {\r\n      if (data.success) {\r\n        dispatch({\r\n          type: LOGOUT_SUCCESS,\r\n          payload: data,\r\n        });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_lOADING,\r\n    });\r\n    AuthService.isAuthenticated().then((data) => {\r\n      dispatch({\r\n        type: ISAUTHENTICATED_STATUS,\r\n        payload: data,\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const registerUser = (user) => {\r\n  console.log(user);\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: REGISTER_LOADING,\r\n    });\r\n    AuthService.register(user).then((data) => {\r\n      const { message } = data;\r\n      console.log(message);\r\n      if (message.msgError) {\r\n        dispatch({\r\n          type: REGISTER_FAIL,\r\n          payload: message.msgBody,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: REGISTER_SUCCESS,\r\n          payload: \"Registration successful!\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\n// export const getBlogsList = () => {\r\n//   return (dispatch) => {\r\n//     dispatch({\r\n//       type: LOGIN_lOADING,\r\n//     });\r\n\r\n//     BlogService.getTodos().then((data) => {\r\n//       dispatch({\r\n//         type: BLOGS_REQUEST_SUCCESS,\r\n//         payload: data.blogs,\r\n//       });\r\n//     });\r\n//   };\r\n// };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport \"./login.css\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport { isAuthenticated, login } from \"../../redux/actions/userAction\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const {\r\n    isAuthenticated: auth,\r\n    error,\r\n    loading,\r\n  } = useSelector((state) => state.authUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(isAuthenticated());\r\n  }, [dispatch]);\r\n\r\n  const submitForm = (event) => {\r\n    event.preventDefault();\r\n    if (username.length === 0 || password.length === 0) {\r\n      return;\r\n    }\r\n    const userDetails = { username, password };\r\n    dispatch(login(userDetails));\r\n  };\r\n\r\n  const renderPasswordField = () => {\r\n    return (\r\n      <>\r\n        <label className='input-label' htmlFor='password'>\r\n          PASSWORD\r\n        </label>\r\n        <input\r\n          type='password'\r\n          id='password'\r\n          className='password-input-field'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderUsernameField = () => {\r\n    return (\r\n      <>\r\n        <label className='input-label' htmlFor='username'>\r\n          USERNAME\r\n        </label>\r\n        <input\r\n          type='text'\r\n          id='username'\r\n          className='username-input-field'\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderError = () => {\r\n    return <p className='error-message '>*{error}</p>;\r\n  };\r\n\r\n  return auth ? (\r\n    <Redirect to='/' />\r\n  ) : loading ? (\r\n    <div style={{ textAlign: \"center\", margin: \"auto 0\" }}>\r\n      <Loader type='TailSpin' color='#00BFFF' height={50} width={50} />\r\n    </div>\r\n  ) : (\r\n    <div className='login-form-container'>\r\n      <img\r\n        src='https://image.freepik.com/free-vector/letter-logo-design-template_23987-87.jpg'\r\n        className='login-image'\r\n        alt='website login'\r\n      />\r\n      <form className='form-container' onSubmit={submitForm}>\r\n        <img\r\n          src='https://image.freepik.com/free-vector/letter-logo-design-template_23987-87.jpg'\r\n          className='login-website-logo-desktop-image'\r\n          alt='website logo'\r\n        />\r\n        <div className='input-container'>{renderUsernameField()}</div>\r\n        <div className='input-container'>{renderPasswordField()}</div>\r\n        <button type='submit' className='login-button'>\r\n          Login\r\n        </button>\r\n        {error !== null ? renderError() : \"\"}\r\n        <Link\r\n          to='/register'\r\n          style={{ fontSize: \"12px\", marginTop: \"12px\", textAlign: \"center\" }}\r\n        >\r\n          If you dont have an account, register here!\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./home.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        padding: \"15px\",\r\n      }}\r\n    >\r\n      <h1 style={{ marginBottom: \"30px\" }}>\r\n        This is the Home page of our application\r\n      </h1>\r\n      <p\r\n        style={{\r\n          backgroundColor: \"grey\",\r\n          padding: \"10px\",\r\n          borderRadius: \"6px\",\r\n          color: \"white   \",\r\n        }}\r\n      >\r\n        Accessible to both Content_writers and Admins\r\n      </p>\r\n      <h5>Application is built based on below technologies:</h5>\r\n      <ul style={{ margin: \"10px\" }}>\r\n        <li>React.Js as front-end UI library</li>\r\n        <li>NodeJs and ExpressJs as backend and Web API framework </li>\r\n        <li>\r\n          MongoDb server and Mongoose as ODM library for MongoDB / JWT token\r\n          mechanism\r\n        </li>\r\n        <li>Redux for state management</li>\r\n        <li>\r\n          React-router-dom and few other packages with react library to acheive\r\n          the required functionalities\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport \"../login/login.css\";\r\nimport { isAuthenticated, registerUser } from \"../../redux/actions/userAction\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"Admin\");\r\n  const [errorMsg, seterrorMsg] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    isAuthenticated: auth,\r\n    error,\r\n    loading,\r\n    message,\r\n  } = useSelector((state) => state.authUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(isAuthenticated());\r\n  }, [dispatch]);\r\n\r\n  const renderPasswordField = () => {\r\n    return (\r\n      <>\r\n        <label className='input-label' htmlFor='password'>\r\n          PASSWORD\r\n        </label>\r\n        <input\r\n          type='password'\r\n          id='password'\r\n          className='password-input-field'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderRoleField = () => {\r\n    return (\r\n      <>\r\n        <label className='input-label' htmlFor='password'>\r\n          Select Role\r\n        </label>\r\n        <select\r\n          type='password'\r\n          id='password'\r\n          className='password-input-field'\r\n          value={role}\r\n          onChange={(e) => setRole(e.target.value)}\r\n        >\r\n          <option value='admin'>Admin</option>\r\n          <option value='user'>Content_Writer</option>\r\n        </select>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderUsernameField = () => {\r\n    return (\r\n      <>\r\n        <label className='input-label' htmlFor='username'>\r\n          USERNAME\r\n        </label>\r\n        <input\r\n          type='text'\r\n          id='username'\r\n          className='username-input-field'\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderError = () => {\r\n    return <p className='error-message '>*{error ? error : errorMsg}</p>;\r\n  };\r\n\r\n  const renderMessage = () => {\r\n    return (\r\n      <>\r\n        <p\r\n          style={{\r\n            backgroundColor: \"lightgreen\",\r\n            padding: \"10px\",\r\n            marginTop: \"10px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {message ? message : \"\"}\r\n        </p>\r\n        <Link to='/login'>Click here and Login</Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const submitForm = (event) => {\r\n    event.preventDefault();\r\n    if (username === \"\") {\r\n      alert(\"Please fill the username field\");\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      alert(\"Please enter the password\");\r\n      return;\r\n    }\r\n    if (username.length === 0 || password.length === 0) {\r\n      seterrorMsg(\"All the fields are mandatory\");\r\n      return;\r\n    }\r\n    const userDetails = { username, password, role };\r\n    dispatch(registerUser(userDetails));\r\n    setPassword(\"\");\r\n    setUsername(\"\");\r\n  };\r\n\r\n  return auth ? (\r\n    <Redirect to='/' />\r\n  ) : loading ? (\r\n    <div style={{ textAlign: \"center\", margin: \"auto 0\" }}>\r\n      <Loader type='TailSpin' color='#00BFFF' height={50} width={50} />\r\n    </div>\r\n  ) : (\r\n    <div className='login-form-container'>\r\n      <img\r\n        src='https://image.freepik.com/free-vector/letter-logo-design-template_23987-87.jpg'\r\n        className='login-image'\r\n        alt='website login'\r\n      />\r\n      <form\r\n        className='form-container'\r\n        onSubmit={submitForm}\r\n        style={{ backgroundColor: \"lightgray\" }}\r\n      >\r\n        <img\r\n          src='https://image.freepik.com/free-vector/letter-logo-design-template_23987-87.jpg'\r\n          className='login-website-logo-desktop-image'\r\n          alt='website logo'\r\n        />\r\n        <div className='input-container'>{renderUsernameField()}</div>\r\n        <div className='input-container'>{renderPasswordField()}</div>\r\n        <div className='input-container'>{renderRoleField()}</div>\r\n\r\n        <button type='submit' className='login-button'>\r\n          Register Here\r\n        </button>\r\n        {error || errorMsg !== null ? renderError() : \"\"}\r\n        {message !== null ? renderMessage() : \"\"}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        padding: \"15px\",\r\n      }}\r\n    >\r\n      <h1 style={{ marginBottom: \"30px\" }}>\r\n        This is the Admin page of our application\r\n      </h1>\r\n      <p\r\n        style={{\r\n          backgroundColor: \"darkred\",\r\n          padding: \"10px\",\r\n          borderRadius: \"6px\",\r\n          marginBottom: \"20px\",\r\n          color: \"white   \",\r\n        }}\r\n      >\r\n        Accessible to <strong>Admins only</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","const BlogService = {\r\n  getBlogs: () => {\r\n    return fetch(\"/user/blogs\").then((response) => {\r\n      if (response.status !== 401) {\r\n        return response.json().then((data) => data);\r\n      } else return { message: { msgBody: \"UnAuthorized\", msgError: true } };\r\n    });\r\n  },\r\n  postBlog: (blog) => {\r\n    return fetch(\"/user/blog\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(blog),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((response) => {\r\n      if (response.status !== 401) {\r\n        return response.json().then((data) => data);\r\n      } else return { message: { msgBody: \"UnAuthorized\" }, msgError: true };\r\n    });\r\n  },\r\n  deleteBlog: (blog) => {\r\n    return fetch(\"/user/delete\", {\r\n      method: \"delete\",\r\n      body: JSON.stringify(blog),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((response) => {\r\n      if (response.status !== 401) {\r\n        return response.json().then((data) => data);\r\n      } else return { message: { msgBody: \"UnAuthorized\" }, msgError: true };\r\n    });\r\n  },\r\n};\r\n\r\nexport default BlogService;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteBlogItem } from \"../../redux/actions/blogsAction\";\r\nimport \"./blog.css\";\r\n\r\nconst Blog = (props) => {\r\n  const { role } = useSelector((state) => state.authUser.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const { blog } = props;\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getBlogsList());\r\n  // }, []);\r\n\r\n  const onClickHandler = () => {\r\n    dispatch(deleteBlogItem(blog));\r\n  };\r\n\r\n  return (\r\n    <li className='list-items'>\r\n      <p>{props.blog.blog}</p>\r\n      {role === \"admin\" ? (\r\n        <div>\r\n          <button\r\n            className='buttonn'\r\n            style={{ backgroundColor: \"red\", color: \"white\" }}\r\n            onClick={onClickHandler}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            className='buttonn'\r\n            style={{ backgroundColor: \"Green\", color: \"white\" }}\r\n          >\r\n            {\" \"}\r\n            Approve\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import BlogService from \"../../Services/BlogService\";\r\nimport {\r\n  BLOGS_REQUEST_FAIL,\r\n  BLOGS_REQUEST_lOADING,\r\n  BLOGS_REQUEST_SUCCESS,\r\n  BLOG_DELETE_FAIL,\r\n} from \"../actionTypes\";\r\n\r\nexport const getBlogsList = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: BLOGS_REQUEST_lOADING,\r\n    });\r\n\r\n    BlogService.getBlogs()\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: BLOGS_REQUEST_SUCCESS,\r\n          payload: data.blogs,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: BLOGS_REQUEST_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteBlogItem = (blog) => {\r\n  return (dispatch) =>\r\n    BlogService.deleteBlog(blog)\r\n      .then(() => {\r\n        console.log(blog);\r\n        BlogService.getBlogs().then((data) => {\r\n          console.log(data);\r\n          dispatch({\r\n            type: BLOGS_REQUEST_SUCCESS,\r\n            payload: data.blogs,\r\n          });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: BLOG_DELETE_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n};\r\n\r\nexport const postBlogItem = (blog) => {\r\n  return (dispatch) => {\r\n    BlogService.postBlog(blog).then((data) => {\r\n      const { message } = data;\r\n      console.log(message);\r\n      if (message.msgError) {\r\n        dispatch({\r\n          type: BLOGS_REQUEST_FAIL,\r\n          payload: message.msgBody,\r\n        });\r\n      } else {\r\n        BlogService.getBlogs().then((data) => {\r\n          console.log(data);\r\n          dispatch({\r\n            type: BLOGS_REQUEST_SUCCESS,\r\n            payload: data.blogs,\r\n          });\r\n        });\r\n      }\r\n\r\n      //   if (!message.msgError) {\r\n      //     BlogService.getBlogsList();\r\n      //   } else if (message.msgBody === \"UnAuthorized\") {\r\n      //     dispatch({\r\n      //       type: BLOG_REQUEST_FAIL,\r\n      //       payload: message.msgBody,\r\n      //     });\r\n      //   } else {\r\n      //     dispatch({\r\n      //       type: BLOGS_REQUEST_FAIL,\r\n      //       payload: message.msgBody,\r\n      //     });\r\n      //   }\r\n    });\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Blog from \"../blog/Blog\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./blogs.css\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { getBlogsList, postBlogItem } from \"../../redux/actions/blogsAction\";\r\n\r\nconst Blogs = () => {\r\n  const [blog, setblog] = useState({ blog: \"\" });\r\n  const { blogs, loading } = useSelector((state) => state.blogReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getBlogsList());\r\n  }, [dispatch]);\r\n\r\n  const onChange = (e) => {\r\n    setblog({ blog: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    if (blog.blog === \"\") {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    dispatch(postBlogItem(blog));\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setblog({ blog: \"\" });\r\n  };\r\n\r\n  return loading ? (\r\n    <div style={{ textAlign: \"center\", margin: \"auto 0\" }}>\r\n      <Loader type='TailSpin' color='#00BFFF' height={50} width={50} />\r\n    </div>\r\n  ) : (\r\n    <div className='main-container'>\r\n      <h4>List of all BLOGS</h4>\r\n      <ul className='list-container'>\r\n        {blogs?.map((b) => {\r\n          return <Blog key={b._id} blog={b} />;\r\n        })}\r\n      </ul>\r\n      <br />\r\n      <form onSubmit={onSubmit}>\r\n        <label htmlFor='blog' className='labell'>\r\n          Blog information\r\n        </label>\r\n        <input\r\n          type='text'\r\n          name='blog'\r\n          value={blog.blog}\r\n          onChange={onChange}\r\n          className='inputBox'\r\n          placeholder='Please Enter the Blog info'\r\n        />\r\n        <button className='buttonn' type='submit'>\r\n          Add Blog\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blogs;\r\n","import React from \"react\";\r\nimport \"./header.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/actions/userAction\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { role } = useSelector((state) => state.authUser.user);\r\n\r\n  const onClickLogoutHandler = () => {\r\n    dispatch(logoutUser());\r\n    <Redirect to='/login' />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className='header-container'>\r\n        <div className='logo-and-title-container'>\r\n          <img\r\n            alt='wave'\r\n            className='logo'\r\n            src='https://image.freepik.com/free-vector/letter-logo-design-template_23987-87.jpg'\r\n          />\r\n          <h1 className='title'>My App</h1>\r\n        </div>\r\n        <div>\r\n          <Link className='route-link' to='/'>\r\n            Home\r\n          </Link>\r\n          <Link className='route-link' to='/blogs'>\r\n            Blogs\r\n          </Link>\r\n          {role === \"admin\" ? (\r\n            <Link className='route-link' to='/admin'>\r\n              Admin\r\n            </Link>\r\n          ) : null}\r\n          <button className='btnn' onClick={() => onClickLogoutHandler()}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <hr />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../redux/actions/userAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Header from \"./header/Header\";\r\n\r\nfunction ProtectedRoute(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticated: auth } = useSelector((state) => state.authUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(isAuthenticated());\r\n  }, [dispatch]);\r\n\r\n  if (!auth) {\r\n    return <Redirect to='/login' />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Route {...props} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/login/Login\";\nimport Home from \"./components/home/Home\";\nimport Register from \"./components/register/Register\";\nimport Admin from \"./components/admin/Admin\";\nimport Blogs from \"./components/blogs/Blogs\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='app-container'>\n        <div className='app-card'>\n          <Switch>\n            <Route exact path='/login' component={Login} />\n            <ProtectedRoute exact path='/' component={Home} />\n            <Route exact path='/register' component={Register} />\n            <ProtectedRoute exact path='/admin' component={Admin} />\n            <ProtectedRoute exact path='/blogs' component={Blogs} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {\r\n  BLOGS_REQUEST_FAIL,\r\n  BLOGS_REQUEST_lOADING,\r\n  BLOGS_REQUEST_SUCCESS,\r\n  BLOG_DELETE_FAIL,\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  blogs: [],\r\n  blog: {},\r\n  error: null,\r\n  message: null,\r\n};\r\n\r\nconst blogsReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case BLOGS_REQUEST_lOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case BLOGS_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        blogs: payload,\r\n        loading: false,\r\n      };\r\n    case BLOGS_REQUEST_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case BLOG_DELETE_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blogsReducer;\r\n","import {\r\n  BLOG_REQUEST_FAIL,\r\n  ISAUTHENTICATED_STATUS,\r\n  LOGIN_FAIL,\r\n  LOGIN_lOADING,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_FAIL,\r\n  REGISTER_LOADING,\r\n  REGISTER_SUCCESS,\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  user: null,\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n  error: null,\r\n  message: null,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOGIN_lOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ISAUTHENTICATED_STATUS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: payload.isAuthenticated,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: payload.user,\r\n        isAuthenticated: payload.isAuthenticated,\r\n        error: null,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        user: payload.message,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: payload.user.message,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload.user,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n        message: null,\r\n      };\r\n    case REGISTER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: payload,\r\n        error: null,\r\n      };\r\n    case BLOG_REQUEST_FAIL:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        error: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport blogsReducer from \"./blogsReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nexport default combineReducers({\r\n  authUser: userReducer,\r\n  blogReducer: blogsReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../redux/reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}